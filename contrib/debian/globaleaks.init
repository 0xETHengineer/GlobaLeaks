#! /bin/sh

### BEGIN INIT INFO
# GlobaLeaks startup script for Ubuntu and Debian Linux servers
#
# cp globaleaks.init /etc/init.d/globaleaks
#
# To automatically start at reboot
# sudo update-rc.d globaleaks defaults
#
# Provides:          globaleaks
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: globaleaks initscript
# Description:       This file starts up the globaleaks server.
### END INIT INFO

# Author: Giovanni Pellerano <evilaliv3@globaleaks.org>

###############################################################################

# Start of Configurable Arguments

# USER = [user_name]
#   permits to configure the USER privileges of the globaleaks process
USER=www-data

# GROUP = [group_name]
#   permits to configure the GROUP privileges of the globaleaks process
GROUP=www-data

# HOST = [ip_address, hostname, other_hostname]
#   permits to configure a list of hosts at which globaleaks will be reachable
HOSTS_LIST=127.0.0.1,localhost,dev.globaleaks.org

# LISTENINGPORT = [port_number]
#   permits to configure a port at which globaleaks process will bind to
LISTENING_PORT=8082

# GL_DIR = [directory_path]
#   must be configured with the path at which globaleaks install resides
GLDIR=/data/globaleaks/dev

# WORKING_DIR
#   must be configured with the daemon working directory
WORKING_DIR=${GLDIR}/working_dir

# End of Configurable Arguments

###############################################################################

GLBACKENDDIR=${GLDIR}/GLBackend
GLCLIENTDIR=${GLDIR}/GLClient
GLENV=${GLDIR}/glenv/bin/activate
GLBACKEND_DAEMON=${GLBACKENDDIR}/bin/startglobaleaks

GLBACKEND_ARGS="--port ${LISTENING_PORT} --accept-host=${HOSTS_LIST} --user=${USER} --group=${GROUP} --working-path=${WORKING_DIR}"

STARTCMD="${GLBACKEND_DAEMON} ${GLBACKEND_ARGS}"

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=$(basename $(readlink -nf $0))

SCRIPTNAME=$0
GLBACKEND_PIDFILE=${WORKING_DIR}/twistd.pid

if [ -e ${GLBACKEND_PIDFILE} ]; then
    GLBACKEND_PID=`cat ${GLBACKEND_PIDFILE}`
else
    GLBACKEND_PID=0
fi

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

do_start()
{
    # Check to see if the GLBackend daemon is already running.
    if [ "${GLBACKEND_PID}" -ne "0" ]; then
      if kill -0 ${GLBACKEND_PID} 1<&- 2<&-; then
        echo "Globaleaks already running at pid ${GLBACKEND_PID}"
        return
      fi
    fi

    . ${GLENV}
    if ${STARTCMD}; then
        echo "started."
    else
        echo "problem when starting. aborting."
    fi
}

do_stop()
{
    echo "Stopping Globaleaks..."

    # this is always needed
    rm -f ${GLBACKEND_PIDFILE} 1<&- 2<&-

    if [ "${GLBACKEND_PID}" -ne "0" ]; then
      if kill -0 ${GLBACKEND_PID} 1<&- 2<&-; then
        kill -15 ${GLBACKEND_PID} 1<&- 2<&-
        echo "stopped."
        return
      fi
    fi

    echo "not running."
}

do_restart() {
    do_stop

    GLBACKEND_PID=0

    do_start
}

#
# Function that queries the status of the daemon/service
#
do_status()
{
    return
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  #reload|force-reload)
	#
	# If do_reload() is not implemented then leave this commented out
	# and leave 'force-reload' as an alias for 'restart'.
	#
	#log_daemon_msg "Reloading $DESC" "$NAME"
	#do_reload
	#log_end_msg $?
	#;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_restart
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac
