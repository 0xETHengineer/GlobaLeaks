Actually I've got some problems in using those scheduler,

jobs_base was the previously know jobs/base.py file

At the moment those file are not used, and the scheduler is provided by the standard python
apscheduler (http://packages.python.org/APScheduler/modules/scheduler.html) It's pretty good,
support all the feature we need, and works without problem.

notification.py and delivery.py use this globaleaks-scheduler

This was from models/submission.py

    receiver_tips = context.create_receiver_tips(internal_tip)

    log.debug("Looking up receivers")
    for receiver in context.receivers:
        log.debug("[D] %s %s " % (__file__, __name__), "Submission", "create_tips", "Creating tip for %s" % receiver.receiver_gus)
        receiver_tip = ReceiverTip()
        receiver_tip.internaltip = internal_tip
        receiver_tip.new(receiver.receiver_gus)
        store.add(receiver_tip)
        log.debug("Tip created")


        At the moment the scheduler queue is bugged,


        log.debug("Creating delivery jobs")
        delivery_job = Delivery()
        delivery_job.submission_gus = submission_gus
        delivery_job.receipt_id = receiver_tip.address
        work_manager.add(delivery_job)

        log.debug("Added delivery to %s to the work manager" % receiver.receiver_gus)

        notification_job = Notification()
        notification_job.address = receiver.name
        notification_job.receipt_gus = receiver_tip.address
        work_manager.add(notification_job)

        log.debug("Deleting the temporary submission %s" % submission.submission_gus)

        store.remove(submission)
        # maybe also this operation can give the lock problem

        try:
            store.commit()
        except Exception, e:
            log.exception("[E]: %s %s " % (__file__, __name__), "Submission", "add_file", "submission_gus", type(submission_gus), "file_name", type(file_name), "Could not create submission" )
            log.err(e)
            store.rollback()
            store.close()

        log.debug("create_tips complete, commit done, closing storage")
        store.close()

